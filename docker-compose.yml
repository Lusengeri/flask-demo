version: '3'

services:
  db:
    container_name: postgres_database
    image: postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 60s
      timeout: 10s
      retries: 10 
      start_period: 50s
    volumes:
      - pg_dat:/var/lib/postgres/data

  pgadmin:
    container_name: pg_admin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - 5050:5050
    depends_on:
      - db

  backend:
    container_name: flask_demo
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      - FLASK_APP=main.py
      - FLASK_DEBUG=1
      - FLASK_RUN_PORT=5000
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    command: ["flask", "run", "--host=0.0.0.0"]
    ports:
      - 5000:5000
    volumes:
      - .:/flask-docker
    depends_on:
      db:
        condition: service_healthy

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prom_dat:/prometheus

  grafana:
    image: grafana/grafana
    volumes:
      - ./datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - 3000:3000

volumes:
  pg_dat:
  prom_dat:
